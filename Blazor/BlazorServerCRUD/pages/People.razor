@page "/people"

@using DataLibrary
@using BlazorApp.Models
@using Microsoft.Extensions.Configuration

@inject IDataAccess _data
@inject IConfiguration _config

<h3>People</h3>

<button class="btn btn-primary" @onclick="InsertData">Insert</button>
<button class="btn btn-warning" @onclick="UpdateData">Update</button>
<button class="btn btn-danger" @onclick="DeleteData">Delete</button>

@if (people == null)
{
    <p><em>Loading...</em></p>
} else
{
    @foreach (var p in people)
    {
        <p>
            @p.FirstName @p.LastName 
        </p>
    }
}

@code {
    List<PersonModel> people;
        
        // CREATE DATA
          private async Task InsertData()
    {
        string sql = "insert into People (FirstName, LastName) values (@FirstName, @LastName);"

            // wait until it's done and insert specified firstname and lastname
        await _data.SaveData(sql, new { FirstName = "Billy", LastName = "Jones" }, _config.GetConnectionString("default"))
    }

        
        // READ DATA
    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from People";

        people = await _data.LoadData<BlazorApp.Models.PersonModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }
        
        // UPDATE DATA
    private async Task UpdateData()
    {
        string sql = "update People set FirstName = @FirstName where Lastname = @LastName";
        await _data.SaveData(sql, new { FirstName = "Billy", LastName = "Jones" }, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

         // DELETE DATA
    private async Task DeleteData()
    {
        string sql = "delete from People where Lastname = @LastName";
        await _data.SaveData(sql, new { LastName = "white" }, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

}
